%% https://github.com/erlang/rebar3/blob/master/rebar.config.sample

%% behaviac是否debug模式
BehaviacDebug = true,

[
    {rebar_packages_cdn, "https://hexpm.upyun.com"},

    {erl_opts, [
        debug_info,
        {i, "include"},
        {i, "include/proto"},
        {i, "./_build/default/plugins/gpb/include"}
    ]},

    {deps, [
        {ranch, "2.0.0"},
        {enif_protobuf, ".*", {git, "https://github.com/jg513/enif_protobuf.git", {tag, "master"}}},
        {mongodb, ".*", {git, "git://github.com/comtihon/mongodb-erlang", {tag, "v3.2.0"}}},
        {mysql_poolboy, ".*", {git, "https://github.com/mysql-otp/mysql-otp-poolboy", {tag, "0.2.0"}}},
        {jsx, "3.0.0"}
    ]},

    {overrides, [
        {add, enif_protobuf, [
            %% 用pc编译
            {provider_hooks, [{pre, [{compile, {pc, compile}}, {clean, {pc, clean}}]}]},
            %% Windows需要先设置编译环境
            %% 把cl.exe放到环境变量
            %% 设置当前shell环境
            %% "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x64
            %% "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" x64
            {plugins, [{pc, ".*", {git, "https://github.com/DominicGame/port_compiler.git", {tag, "master"}}}]}

        ]},
        %% 换成hex下载
        {override, mysql_poolboy, [{deps, [{mysql, "1.6.0"}, {poolboy, "1.5.2"}]}]},

        %% 用rebar3_gpb_plugin的版本
        {override, enif_protobuf, [{deps, []}]},

        %% rebar_ct在hex上面都搜不到了, 先屏蔽掉
        {override, mongodb, [{plugins, []}]},

        %% 全都换成这个源
        {override, [{rebar_packages_cdn, "https://hexpm.upyun.com"}]}
    ]},

    {relx, [
        %% 第一, 对于一个上线的项目, 只会更改项目的app, 如果要改其他app那必须跟着一个'大版本'走才合理
        %% 第二, release名字可以通过version区别不同的release
        %% 第三, 根据第一, 实际上热更只会更新项目的app
        %% 所以这里release的名字必须和app的名字一致
        {release, {ptolemaios, "0.1.0"}, [ptolemaios, sasl]},

        {sys_config, "./config/sys.config"},
        {vm_args, "./config/vm.args"},

        {dev_mode, true},
        {include_erts, false},

        {extended_start_script, true}
    ]},

    %% set ESCRIPT_EMULATOR=werl&rebar3 shell --name ptolemaios@127.0.0.1 --setcookie ptolemaios_cookie
    %% ./rebar3 shell --name ptolemaios@127.0.0.1 --setcookie ptolemaios_cookie
    {shell, [
        {config, "config/sys.config"},
        {apps, [ptolemaios]}
    ]},

    {plugins, [
        {rebar3_gpb_plugin, "2.15.0"},
        {pc, ".*", {git, "https://github.com/DominicGame/port_compiler.git", {tag, "master"}}}
    ]},

    %% 钩子escript
    %% clean分两步Verifying dependencies和Cleaning out ptolemaios, 所以每个脚本都会触发两次
    %% 按照顺序 (ptolemaios -> ptolemaios_pre) -> (ptolemaios -> ptolemaios_pre) -> (ptolemaios_post) -> (ptolemaios_post)
    %% 所以, clean使用dets记录执行次数, (count rem 2) == 0, 保证ptolemaios_pre和ptolemaios_post只执行一次
    %% 在clean/0和compile/0方法添加代码即可
    {pre_hooks, [
        {compile, "escript hooks_escript/ptolemaios.escript compile"},
        {clean, "escript hooks_escript/ptolemaios.escript clean"},
        {compile, "escript hooks_escript/ptolemaios_pre.escript compile"},
        {clean, "escript hooks_escript/ptolemaios_pre.escript clean"}
    ]},

    {post_hooks, [
        {compile, "escript hooks_escript/ptolemaios_post.escript compile"},
        {clean, "escript hooks_escript/ptolemaios_post.escript clean"}
    ]},

    {profiles, [
        %% windows本地, 可以兼容多版本erlang
        %% 可能出现无法删除erts文件夹, 需要先把empd关掉
        {local,
            [{relx, [{dev_mode, false}, {include_erts, true}]}]
        },
        %% 打包erts会导致epmd固定使用'第一个启动的包'里的epmd开启(如果未开启)
        %% 其他包也会依赖该epmd, 导致无法删除'第一个启动的包'
        %% 实际中单个游戏本身也不会出现依赖多版本erl的情况
        %% 所以生产环境不打包erts, 使用系统内的erl
        {prod,
            [{relx, [{dev_mode, false}, {include_erts, false}]}]
        }
    ]},

    {provider_hooks, [
        {pre, [
            {compile, {protobuf, compile}},
            {clean, {protobuf, clean}},
            {compile, {pc, compile}},
            {clean, {pc, clean}}
        ]}
    ]},

    %% 同时生成, {o_erl}/../proto_mapping.erl和{o_erl}/../handle/*_handle.erl
    {gpb_opts, [
        %% 相对ptolemaios的路径
        {i, "proto"},
        {module_name_suffix, "_pb"},
        {o_erl, "src/proto/pb"},
        {o_hrl, "include/proto"},
        {strings_as_binaries, true},
        type_specs
    ]},


    {port_specs, [
        {"priv/example_enif.so", [
            "c_src/example_enif.c"
        ]},
        {"priv/behaviac_enif.so", [
            "c_src/behaviac/behaviac_enif.cpp",
            "c_src/behaviac/src/*/*.cpp",
            "c_src/behaviac/src/*/*/*.cpp",
            "c_src/behaviac/src/*/*/*/*.cpp",
            "c_src/behaviac/behaviac_generated/*/*.cpp",
            "c_src/behaviac/behaviac_generated/*/*/*.cpp"
        ]}
    ]},

    case BehaviacDebug of
        true ->
            {port_env, [
                {"CXXFLAGS", "-I\"c_src/behaviac\" /DBEHAVIAC_RELEASE_CUSTOMIZED"},
                 {"win32", "LDFLAGS", "shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib"}
            ]};
        false ->
            {port_env, [
                {"CXXFLAGS", "-I\"c_src/behaviac\""},
                {"win32", "LDFLAGS", "shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib"}
            ]}
    end
].