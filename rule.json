// 框架规则, 用json配置表达

{
  // 游戏功能(模块), 下称功能
  // 每个功能对应一个唯一id, 这个id用于宏, 协议等等....
  // 每个功能下的子模块, 命名规则 xxx[_yyy[_zzz]] 构成一个树状结构
  "game_module_define": {
    "id": "根节点必须, 子节点可选", "name": "名字, 必须", "sname": "缩写, 可选",
    "comment": "备注, 可选", "children": "子模块, 可选"
  },
  "game_module_list": [
    {"id": 1, "name": "gateway", "comment": "网关", "children": []}
  ],
  // 非功能的缩写
  "extend_sname_define": {"name": "名字, 必须", "sname": "缩写, 可选"},
  "extend_sname_list": [
    {"name": "supervisor", "sname": "sup"},
    {"name": "server", "sname": "svr"},
    {"name": "callback", "sname": "cb"},
    {"name": "private", "sname": "priv"},
    {"name": "ptolemaios", "sname": "plm"},
    {"name": "virture_mysql", "sname": "vsql"}
  ],
  // 功能的宏命名规则, 宏类型+功能id[_XXXXX]+[[_]参数数量]
  // 例子, 普通宏, M123, M123_1(Arg1), M123_2(Arg1, Arg2), M123_TYPE_A, M123_TYPE_A1(Arg1)
  "macro_type_define": {"name": "名字, 必须", "sname": "缩写, 可选", "comment": "备注, 可选"},
  "macro_type_list": [
    {"name": "MODULE", "sname": "M", "comment": "功能模块, 因为宏不能直接写id(?123)"},
    {"name": "MESSAGE", "sname": "MSG", "comment": "erlang进程消息"},
    {"name": "PROCESS_DICT", "sname": "PD", "comment": "erlang进程字典"},
    {"name": "ETS", "comment": "ets表"},
    {"name": "DETS", "comment": "dets表"},
    {"name": "TYPE", "sname": "T", "comment": "type, 泛指类型, 可以看成?M123_TYPE[_XXX]的缩写"},
    {"name": "STATE", "sname": "S", "comment": "state, 泛指状态, 可以看成?M123_STATE[_XXX]的缩写"},
    {"name": "DYNAMIC", "sname": "DYM", "comment": "动态执行函数用宏包一下, 方便管理"}
  ]
}



//%% 每个业务功能(模块)都有一个关键字
//%% 每个关键字对应一个Id, 0对应非业务(模块)
//%% 名字可以缩写, 需要手动记录在这里
//%% 命名规则: 关键字[_xxx[_yyy]]
//[
//%% full name                                     ,short name         ,Id     ,中文注释
//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 通用缩写 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//{supervisor                                      ,sup                ,0      ,"缩写"},
//{sever                                           ,svr                ,0      ,"缩写"},
//{callback                                        ,cb                 ,0      ,"缩写"},
//{private                                         ,priv               ,0      ,"缩写"},
//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 依赖库的关键字 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//{ranch                                           ,undefined          ,0      ,"socket连接池"},
//{enif_protobuf                                   ,undefined          ,0      ,"enif+Protobuf"},
//{mongodb                                         ,undefined          ,0      ,"mongodb"},
//{mysql                                           ,undefined          ,0      ,"mysql"},
//{poolboy                                         ,undefined          ,0      ,"poolboy 进程池"},
//{jsx                                             ,undefined          ,0      ,"jsx json解析库"},
//{xlsx2erl                                        ,undefined          ,0      ,"xlsx生成erl文件"},
//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 框架的关键字 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//{ptolemaios                                      ,undefined          ,0      ,"这个app"},
//{virture                                         ,undefined          ,0      ,"数据落地"},
//{virture_mysql                                   ,vsql               ,0      ,"使用mysql作为数据库"},
//{exia                                            ,undefined          ,0      ,"gen_server的修改版"},
//{proto                                           ,undefined          ,0      ,"协议"},
//{error_code                                      ,ec                 ,0      ,"错误码, 仅头文件"},
//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 业务功能 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
//{gateway                                         ,undefined          ,1      ,"网关"},
//{gateway_client                                  ,gateway_c          ,1      ,"通过socket连接网关的客户端"},
//{player                                          ,undefined          ,2      ,"玩家"},
//{dynames                                         ,ds                 ,3      ,"战斗"},
//{dynames_return                                  ,ds_r               ,3      ,"战斗返回, 通过throw"},
//{dynames_unit                                    ,ds_u               ,3      ,"战斗单位"},
//{dynames_event                                   ,ds_e               ,3      ,"战斗事件"},
//{dynames_event_stream_data                       ,ds_esd             ,3      ,"战斗事件特殊的数据流"},
//{dynames_event_trigger_type_before               ,ds_ettb            ,3      ,"战斗触发xxx类型事件前"},
//{dynames_event_trigger_type_after                ,ds_etta            ,3      ,"战斗触发xxx类型事件后"}
//].













